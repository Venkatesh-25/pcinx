# FRA Atlas DSS - Nginx Configuration
# Production reverse proxy and static file serving

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/geojson;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=1r/s;

    # Upstream backend
    upstream fra_atlas_backend {
        server backend:5000;
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost fra-atlas.local;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # Health check endpoint
        location /health {
            proxy_pass http://fra_atlas_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;
        }

        # API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://fra_atlas_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # Static files - Frontend
        location / {
            root /var/www/html;
            index index.html index-modular.html;
            try_files $uri $uri/ /index.html;

            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            # Cache HTML files for shorter period
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public";
            }

            # GeoJSON data files
            location ~* \.geojson$ {
                add_header Content-Type application/json;
                expires 1d;
            }
        }

        # Analytics page
        location /analytics.html {
            root /var/www/html;
            expires 1h;
        }

        # Assets directory
        location /assets/ {
            root /var/www/html;
            expires 1d;
            add_header Cache-Control "public";
        }

        # CSS and JS directories
        location ~* ^/(css|js)/ {
            root /var/www/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Documentation
        location /docs/ {
            root /var/www/html;
            autoindex on;
            expires 1d;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/html;
            internal;
        }
        
        location = /50x.html {
            root /var/www/html;
            internal;
        }

        # Security - Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(env|git|gitignore|md)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Prevent access to backend directory
        location /backend/ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # SSL configuration (when certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name fra-atlas.local;
    #
    #     ssl_certificate /etc/ssl/certs/fra-atlas.crt;
    #     ssl_certificate_key /etc/ssl/private/fra-atlas.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # Include the same location blocks as HTTP server
    # }
}